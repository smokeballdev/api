{
    "openapi": "3.0.1",
    "info": {
        "title": "API",
        "version": "1.0"
    },
    "paths": {
        "/bankaccountbalances/{id}": {
            "get": {
                "tags": ["BankAccountBalances"],
                "summary": "Get bank account balance.",
                "description": "Sample request:\r\n            \r\n    GET /bankaccountbalances",
                "operationId": "GetBankAccountBalanceById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the bank account balance",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountBalance"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountBalance"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountBalance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bankaccounts/{id}": {
            "get": {
                "tags": ["BankAccounts"],
                "summary": "Get bank account.",
                "description": "Sample request:\r\n            \r\n    GET /bankaccount",
                "operationId": "GetBankAccountById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the bank account",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bankaccounts": {
            "get": {
                "tags": ["BankAccounts"],
                "summary": "Get bank accounts.",
                "description": "Sample request:\r\n            \r\n    GET /bankaccounts",
                "operationId": "GetBankAccounts",
                "responses": {
                    "200": {
                        "description": "Returns the bank accounts",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccountCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activitycodes/{id}": {
            "get": {
                "tags": ["ActivityCodes"],
                "summary": "Get activity code.",
                "description": "Sample request:\r\n            \r\n    GET /activitycodes",
                "operationId": "GetActivityCodeById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "The id of the activity code to return.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the activity code.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity code not found.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["ActivityCodes"],
                "summary": "Updates an activity code.",
                "description": "Sample request:\r\n            \r\n    PUT /activitycodes",
                "operationId": "UpdateActivityCode",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "The id of the activity code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updated activity code.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ActivityCodes"],
                "summary": "Delete an activity code.",
                "description": "Sample request:\r\n            \r\n    DELETE /actvitycodes",
                "operationId": "DeleteActivityCode",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The activity code has been deleted",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activitycodes": {
            "get": {
                "tags": ["ActivityCodes"],
                "summary": "Get activity codes.",
                "description": "Sample request:\r\n            \r\n    GET /activitycodes",
                "operationId": "GetActivityCodes",
                "parameters": [{
                        "name": "updatedSince",
                        "in": "query",
                        "description": "Timestamp in ticks. Use this to only get activity codes which have been updated",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the activity codes",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityPagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityPagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityPagedCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ActivityCodes"],
                "summary": "Creates an activity code.",
                "description": "Sample request:\r\n            \r\n    POST /activitycodes",
                "operationId": "CreateActivityCode",
                "requestBody": {
                    "description": "The created activity code.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "tags": ["Contacts"],
                "summary": "Get contacts.",
                "description": "Sample request:\r\n            \r\n    GET /contacts",
                "operationId": "GetContacts",
                "parameters": [{
                        "name": "updatedSince",
                        "in": "query",
                        "description": "Timestamp in ticks. Use this to only get contacts which have been updated",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Search",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }, {
                        "name": "Terms",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/SearchTerm"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactPagedCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Contacts"],
                "summary": "Create a contact.",
                "description": "Sample request:\r\n            \r\n    POST /contacts",
                "operationId": "CreateContact",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The contact has been accepted and will be created shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts/{id}": {
            "get": {
                "tags": ["Contacts"],
                "summary": "Get a contact.",
                "description": "Sample request:\r\n            \r\n    GET /contacts/{id}",
                "operationId": "GetContactById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the contact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Contacts"],
                "summary": "Updates a contact.",
                "description": "Sample request:\r\n            \r\n    PUT /contacts/id",
                "operationId": "UpdateContact",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The contact has been accepted and will be updated shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Contacts"],
                "summary": "Deletes a contact.",
                "description": "Sample request:\r\n            \r\n    DELETE /contacts/id",
                "operationId": "DeleteContact",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted and will be deleted shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts/{contactId}/relations": {
            "get": {
                "tags": ["Relations"],
                "summary": "Get contact relations",
                "description": "Sample request:\r\n            \r\n    GET /contacts/{contactId}",
                "operationId": "GetRelations",
                "parameters": [{
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactPagedCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Relations"],
                "summary": "Create a contact relation",
                "description": "Sample request:\r\n            \r\n    POST /contacts/{contactId}",
                "operationId": "CreateRelation",
                "parameters": [{
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRelationDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRelationDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRelationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The contact relation has been accepted and will be created shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts/{contactId}/relations/{relatedContactId}": {
            "get": {
                "tags": ["Relations"],
                "summary": "Get a contact relation",
                "description": "Sample request:\r\n            \r\n    GET /contacts/{contactId}/{relatedContactId}",
                "operationId": "GetRelationById",
                "parameters": [{
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "relatedContactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the contact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Relations"],
                "summary": "Updates a contact relation",
                "description": "Sample request:\r\n            \r\n    PUT /contacts/{contactId}/relations/{relatedContactId}",
                "operationId": "UpdateRelation",
                "parameters": [{
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "relatedContactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRelationDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRelationDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRelationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The contact relation has been accepted and will be updated shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Relations"],
                "summary": "Deletes a contact relation",
                "description": "Sample request:\r\n            \r\n    DELETE /contacts/{contactId}/relations/{relatedContactId}",
                "operationId": "DeleteRelation",
                "parameters": [{
                        "name": "contactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "relatedContactId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted and will be deleted shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/documents/files": {
            "get": {
                "tags": ["Files"],
                "summary": "Gets a list of files on a matter",
                "description": "GET /matters/{matterId}/files",
                "operationId": "GetFiles",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of files on a matter",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilePagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilePagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilePagedCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Files"],
                "summary": "Adds a file to a matter",
                "operationId": "AddFile",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddFileDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddFileDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddFileDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddFileDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Returns the file location and upload url",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFileInfo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFileInfo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFileInfo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request if the file name does not contain valid XML characters.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/documents/files/{fileId}": {
            "get": {
                "tags": ["Files"],
                "summary": "Gets a file",
                "description": "GET /matters/{matterId}/files/{fileId}",
                "operationId": "GetFileById",
                "parameters": [{
                        "name": "fileId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the file",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Files"],
                "summary": "Update a file's metadata or upload a new version of the file",
                "operationId": "UpdateFile",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "fileId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditFileDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditFileDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditFileDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditFileDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Returns the file location and upload url",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFileInfo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFileInfo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFileInfo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/documents/files/{fileId}/download": {
            "get": {
                "tags": ["Files"],
                "summary": "Gets the download url for a file",
                "operationId": "DownloadFile",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "fileId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the file download metadata",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadFileInfo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadFileInfo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DownloadFileInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/documents/files/{fileId}/upload": {
            "get": {
                "tags": ["Files"],
                "summary": "Gets the upload url for a file",
                "operationId": "UploadFile",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "fileId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the file upload url",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFileInfo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFileInfo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadFileInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/documents/folders": {
            "get": {
                "tags": ["Folders"],
                "summary": "Gets the root folder of a matter and a list of sub folders and files",
                "operationId": "GetFolders",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the sub folders and files in the root folder",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderListingPagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderListingPagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderListingPagedCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Folders"],
                "summary": "Creates a folder",
                "operationId": "CreateRootFolder",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The folder has been accepted and will be created shortly",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request if the folder name is empty or the parent folder is specified but doesn't exist.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/documents/folders/{folderId}": {
            "get": {
                "tags": ["Folders"],
                "summary": "Gets a folder and a list of sub folders and files",
                "operationId": "GetFolderById",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "folderId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the sub folders and files in the folder",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderListingPagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderListingPagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderListingPagedCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Folders"],
                "summary": "Update a folder",
                "operationId": "UpdateFolder",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "folderId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FolderDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Returns the folder location",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Folder not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/expenses": {
            "get": {
                "tags": ["Expenses"],
                "summary": "Get expenses.",
                "description": "Sample request:\r\n            \r\n    GET /expenses",
                "operationId": "GetExpenses",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "updatedSince",
                        "in": "query",
                        "description": "Timestamp in ticks. Use this to only get expenses which have been updated",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the expenses",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpensePagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpensePagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpensePagedCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Expenses"],
                "summary": "Creates an expense on a matter.",
                "operationId": "CreateExpense",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "The id of the matter the expense should be linked to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The created expense.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/expenses/{id}": {
            "put": {
                "tags": ["Expenses"],
                "summary": "Updates an expense on a matter.",
                "operationId": "UpdateExpense",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "The id of the matter the expense should be linked to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the expense",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updated expense.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Expenses"],
                "summary": "Get an expense by id.",
                "operationId": "GetExpenseById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "The id of the expense to return.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the expense.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Expense not found.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Expenses"],
                "summary": "Delete an expense.",
                "description": "Sample request:\r\n            \r\n    DELETE /expenses",
                "operationId": "DeleteExpense",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The expense has been deleted",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/expenses/{expenseId}/attachment": {
            "post": {
                "tags": ["Expenses"],
                "summary": "Gets the upload url for uploading an expense.",
                "operationId": "PostAttachment",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "The id of the matter the expense belongs to.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "expenseId",
                        "in": "path",
                        "description": "The id of the expense which should have the attachment added.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "An object containing details about the attachment (e.g. file name).",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddAttachmentDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddAttachmentDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddAttachmentDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddAttachmentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the file upload url.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddAttachmentInfo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddAttachmentInfo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddAttachmentInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Expense not found.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/expenses/upload": {
            "post": {
                "tags": ["Expenses"],
                "operationId": "UploadAttachment",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "requestId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddAttachmentInfo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddAttachmentInfo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddAttachmentInfo"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/fees": {
            "get": {
                "tags": ["Fees"],
                "summary": "Get fees.",
                "description": "Sample request:\r\n            \r\n    GET /fees",
                "operationId": "GetFees",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "updatedSince",
                        "in": "query",
                        "description": "Timestamp in ticks. Use this to only get fees which have been updated",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the fees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeePagedCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Fees"],
                "summary": "Create a fee.",
                "description": "Sample request:\r\n            \r\n    POST /fees",
                "operationId": "CreateFee",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The fee has been accepted and will be created shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/fees/{id}": {
            "get": {
                "tags": ["Fees"],
                "summary": "Get a fee.",
                "description": "Sample request:\r\n            \r\n    GET /fees/{id}",
                "operationId": "GetFeeById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the fee",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Fee"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Fee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Fees"],
                "summary": "Update a fee.",
                "description": "Sample request:\r\n            \r\n    PUT /fees",
                "operationId": "UpdateFee",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The fee has been accepted and will be updated shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Fees"],
                "summary": "Delete a fee.",
                "description": "Sample request:\r\n            \r\n    DELETE /fees",
                "operationId": "DeleteFee",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The fee has been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firm": {
            "get": {
                "tags": ["Firm"],
                "summary": "Get firm.",
                "description": "Sample request:\r\n            \r\n    GET /firm",
                "operationId": "GetFirm",
                "responses": {
                    "200": {
                        "description": "Returns the firm",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Firm"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Firm"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Firm"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the firm doesn't exist",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Firm"],
                "summary": "Create a firm.",
                "description": "Sample request:\r\n            \r\n    POST /firm\r\n    {\r\n       \"Firm\": {\r\n           \"Name\": \"Brown LLC\",\r\n           \"StreetAddress\": {\r\n               \"State\": \"NSW\",\r\n           }\r\n           \"Phone\": {\r\n               \"AreaCode\": \"555\",\r\n               \"Number\": \"1234567\"\r\n           }\r\n        },\r\n        \"Staff\": {\r\n            \"UserId\": \"b471682e-fa17-4e46-b7fe-9b2b8fdcb3c2\",\r\n            \"FirstName\" \"Bob\",\r\n            \"LastName\": \"Jones\",\r\n            \"Initials\": \"BJ\",\r\n        }\r\n    }",
                "operationId": "CreateFirm",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFirmDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFirmDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFirmDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFirmDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Returns the firm id and location",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The firm already exists"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Firm"],
                "summary": "Update firm.",
                "description": "Sample request:\r\n            \r\n    PUT /firm\r\n    {\r\n       \"Name\": \"Brown LLC\",\r\n       \"StreetAddress\": {\r\n           \"State\": \"NSW\",\r\n       }\r\n       \"Phone\": {\r\n            \"AreaCode\": \"555\",\r\n            \"Number\": \"1234567\"\r\n        }\r\n    }",
                "operationId": "UpdateFirm",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirmDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirmDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirmDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/FirmDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Returns the firm id and location",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the firm doesn't exist",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/firmusers": {
            "get": {
                "tags": ["FirmUsers"],
                "summary": "Get firm staff user mapping(s).",
                "description": "Sample request:\r\n            \r\n    GET /firmusers",
                "operationId": "GetUserMappings",
                "responses": {
                    "200": {
                        "description": "Returns the firm user mappings"
                    },
                    "202": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["FirmUsers"],
                "summary": "Update firm staff user mapping.",
                "description": "Sample request:\r\n            \r\n    PUT /firmusers",
                "operationId": "UpdateUserMapping",
                "parameters": [{
                        "name": "staffId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "userId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mapping was updated successfully"
                    },
                    "202": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the staff member doesn't exist",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["FirmUsers"],
                "summary": "Delete firm staff user mapping.",
                "description": "Sample request:\r\n            \r\n    DELETE /firmusers",
                "operationId": "DeleteUserMapping",
                "parameters": [{
                        "name": "userId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mapping was deleted successfully"
                    },
                    "202": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the user doesn't exist",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff": {
            "get": {
                "tags": ["Staff"],
                "summary": "Get staff in a firm.",
                "description": "Sample request:\r\n            \r\n    GET /staff",
                "operationId": "GetStaff",
                "parameters": [{
                        "name": "Search",
                        "in": "query",
                        "description": "email, name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of all staff",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffPagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffPagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffPagedCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Staff"],
                "summary": "Create a staff member.",
                "description": "Sample request:\r\n            \r\n    POST /staff",
                "operationId": "CreateStaff",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The staff member has been accepted and will be created shortly",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff/{id}": {
            "get": {
                "tags": ["Staff"],
                "summary": "Get a staff member.",
                "description": "Sample request:\r\n            \r\n    GET /staff/{id}",
                "operationId": "GetStaffById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the staff member",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Staff"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Staff"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Staff"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If the firm doesn't exist",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Staff"],
                "summary": "Updates a staff member.",
                "description": "Sample request:\r\n            \r\n    PUT /staff/{id}",
                "operationId": "UpdateStaff",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The staff member has been accepted and will be updated shortly",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Staff member not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/invoices": {
            "get": {
                "tags": ["Invoices"],
                "summary": "Get invoices.",
                "description": "Sample request:\r\n            \r\n    GET /invoices",
                "operationId": "GetInvoices",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "updatedSince",
                        "in": "query",
                        "description": "Timestamp in ticks. Use this to only get invoices which have been updated",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the invoices",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoicePagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoicePagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoicePagedCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/items": {
            "get": {
                "tags": ["MatterItems"],
                "summary": "Get items on a matter.",
                "description": "Sample request:\r\n            \r\n    GET /matters/{matterId}/items",
                "operationId": "GetMatterItems",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the matter items",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterItems"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterItems"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterItems"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Matter not found"
                    }
                }
            }
        },
        "/matters/{matterId}/items/{id}": {
            "get": {
                "tags": ["MatterItems"],
                "summary": "Get an item on a matter.",
                "description": "Sample request:\r\n            \r\n    GET /matters/{matterId}/items/{id}",
                "operationId": "GetMatterItem",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the item",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterItem"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterItem"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                }
            }
        },
        "/layouts": {
            "get": {
                "tags": ["LayoutDesigns"],
                "summary": "Get layout designs",
                "operationId": "GetLayoutDesigns",
                "parameters": [{
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LayoutDesignInfoPagedCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/layouts/{id}": {
            "get": {
                "tags": ["LayoutDesigns"],
                "summary": "Get a layout design",
                "operationId": "GetLayoutDesignById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Layout design ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LayoutDesign"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/layouts": {
            "get": {
                "tags": ["LayoutMatterItems"],
                "summary": "Get layout items on a matter",
                "operationId": "GetLayoutMatterItems",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "Matter ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LayoutMatterItemDataCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/layouts/{itemId}": {
            "get": {
                "tags": ["LayoutMatterItems"],
                "summary": "Get a layout item on a matter",
                "operationId": "GetLayoutMatterItemById",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "Matter ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "itemId",
                        "in": "path",
                        "description": "Matter item ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LayoutMatterItemData"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["LayoutMatterItems"],
                "summary": "Merge a layout matter item",
                "operationId": "MergeLayout",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "Matter ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "itemId",
                        "in": "path",
                        "description": "Matter item ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data to merge into the existing layout",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LayoutMatterItem"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LayoutMatterItem"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LayoutMatterItem"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/layouts/{itemId}/contacts": {
            "get": {
                "tags": ["LayoutMatterItems"],
                "summary": "Get contacts on a layout",
                "operationId": "GetLayoutMatterItemContacts",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "itemId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LayoutContact"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["LayoutMatterItems"],
                "summary": "Add a contact to a layout",
                "operationId": "AddLayoutMatterItemContact",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "itemId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LayoutContactData"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LayoutContactData"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LayoutContactData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/matters": {
            "get": {
                "tags": ["Matters"],
                "summary": "Get matters.",
                "description": "Sample request:\r\n            \r\n    GET /matters",
                "operationId": "GetMatters",
                "parameters": [{
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "MatterTypeId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "IsLead",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "LastUpdated",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the matters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterPagedCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Matters"],
                "summary": "Create a matter.",
                "description": "Sample request:\r\n            \r\n    POST /matters",
                "operationId": "CreateMatter",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatterDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatterDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatterDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The matter has been accepted and will be created shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}": {
            "get": {
                "tags": ["Matters"],
                "summary": "Get a matter.",
                "description": "Sample request:\r\n            \r\n    GET /matters/{matterId}",
                "operationId": "GetMatterById",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the matter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Matter"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Matter not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Matters"],
                "summary": "Updates a matter.",
                "description": "Sample request:\r\n            \r\n    PUT /matters/matterId",
                "operationId": "UpdateMatter",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatterDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatterDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatterDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The matter has been accepted and will be updated shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Matter not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Matters"],
                "summary": "Deletes a matter.",
                "description": "Sample request:\r\n            \r\n    DELETE /matters/matterId",
                "operationId": "DeleteMatter",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The matter has been accepted and will be deleted shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Matter not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/roles/{roleId}/relationships": {
            "get": {
                "tags": ["Relationships"],
                "summary": "Get relationships on a matter.",
                "description": "Sample request:\r\n            \r\n    GET /matters/{matterId}/roles/{roleId}",
                "operationId": "GetRelationshipsOnRole",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the relationships",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterRelationships"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": ["Relationships"],
                "summary": "Add another relationship to role.",
                "description": "Sample request:\r\n            \r\n    POST /matters/{matterId}/roles/{roleId}/relationships",
                "operationId": "AddAnotherRelationshipToRole",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelationshipDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelationshipDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelationshipDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The relationship has been accepted and will be created shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/matters/{matterId}/roles/{roleId}/relationships/{id}": {
            "get": {
                "tags": ["Relationships"],
                "summary": "Get a relationship on a role.",
                "description": "Sample request:\r\n            \r\n    GET /matters/{matterId}/roles/{roleId}/relationships/{id}",
                "operationId": "GetRelationshipOnRole",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the relationship",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Relationship"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": ["Relationships"],
                "summary": "Updates a relationship on a matter",
                "description": "Sample request:\r\n            \r\n    PUT /matters/{matterId}/roles/{id}/relationships/{id}",
                "operationId": "UpdateRelationship",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "roleId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelationshipDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelationshipDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelationshipDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The relationship has been accepted and will be updated shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/matters/{matterId}/roles": {
            "get": {
                "tags": ["Roles"],
                "summary": "Get roles on a matter.",
                "description": "Sample request:\r\n            \r\n    GET /matters/{matterId}/roles",
                "operationId": "GetRolesOnMatter",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterRoles"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": ["Roles"],
                "summary": "Add another role to matter.",
                "description": "Sample request:\r\n            \r\n    POST /matters/{matterId}/roles",
                "operationId": "AddAnotherRoleToMatter",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The role has been accepted and will be created shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/matters/{matterId}/roles/{id}": {
            "get": {
                "tags": ["Roles"],
                "summary": "Get a role on a matter.",
                "description": "Sample request:\r\n            \r\n    GET /matters/{matterId}/roles/{id}",
                "operationId": "GetRoleOnMatter",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": ["Roles"],
                "summary": "Update role on matter",
                "description": "Sample request:\r\n            \r\n    PUT /matters/{matterId}/roles/{id}",
                "operationId": "UpdateRole",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The role has been accepted and will be updated shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/mattertypes": {
            "get": {
                "tags": ["MatterTypes"],
                "summary": "Get matter types.",
                "description": "If no `Location` is provided, all matter types from all locations will be returned (paginated)\r\nSample request:\r\n            \r\n    GET /mattertypes",
                "operationId": "GetMatterTypes",
                "parameters": [{
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Name",
                        "in": "query",
                        "description": "Searches for partial match on matter type name",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "Location",
                        "in": "query",
                        "description": "Return matter types from a specific location. In the US API this is the ANSI 2 letter state code (e.g. IL, NY). In the AU API this is shorthand state code (e.g. NSW, ACT, etc)",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "Category",
                        "in": "query",
                        "description": "Return matter types from a specific category.",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "Deleted",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the matter types",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterTypeInfoPagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterTypeInfoPagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterTypeInfoPagedCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mattertypes/{id}": {
            "get": {
                "tags": ["MatterTypes"],
                "summary": "Get a matter type.",
                "description": "Sample request:\r\n            \r\n    GET /mattertypes/{id}",
                "operationId": "GetMatterTypeById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the matter type",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterType"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterType"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatterType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid id parameter",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Matter type not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/matters/{matterId}/memos": {
            "get": {
                "tags": ["Memos"],
                "summary": "Gets memos on a matter",
                "operationId": "GetMemos",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the memos",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MemoPagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MemoPagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MemoPagedCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Memos"],
                "summary": "Creates a memo on a matter",
                "operationId": "CreateMemo",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemoDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemoDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemoDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemoDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The memo has been accepted and will be created shortly",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/matters/{matterId}/memos/{id}": {
            "get": {
                "tags": ["Memos"],
                "summary": "Get a memo",
                "operationId": "GetMemoById",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the memo",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Memo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Memo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Memo"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Memo not found"
                    }
                }
            },
            "put": {
                "tags": ["Memos"],
                "summary": "Updates a memo",
                "operationId": "UpdateMemo",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemoDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemoDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemoDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemoDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The memo has been accepted and will be updated shortly",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Memo not found"
                    }
                }
            },
            "delete": {
                "tags": ["Memos"],
                "summary": "Deletes a memo",
                "operationId": "DeleteMemo",
                "parameters": [{
                        "name": "matterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted and will be deleted shortly",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Memo not found"
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "tags": ["Tasks"],
                "summary": "Get a task.",
                "description": "Sample request:\r\n            \r\n    GET /tasks/{id}",
                "operationId": "GetTaskById",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the task",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Tasks"],
                "summary": "Updates a task.",
                "description": "Sample request:\r\n            \r\n    PUT /tasks/id",
                "operationId": "UpdateTask",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The task has been accepted and will be updated shortly",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Tasks"],
                "summary": "Deletes a task.",
                "description": "Sample request:\r\n            \r\n    DELETE /tasks/id",
                "operationId": "DeleteTask",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted and will be deleted shortly",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "tags": ["Tasks"],
                "summary": "Get tasks.",
                "description": "Sample request:\r\n            \r\n    GET /tasks",
                "operationId": "GetTasks",
                "parameters": [{
                        "name": "updatedSince",
                        "in": "query",
                        "description": "Timestamp in ticks. Use this to only get tasks which have been updated",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Search",
                        "in": "query",
                        "description": "subject",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the tasks",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskPagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskPagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskPagedCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Tasks"],
                "summary": "Create a task.",
                "description": "Sample request:\r\n            \r\n    POST /tasks",
                "operationId": "CreateTask",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The task has been accepted and will be created shortly",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks/{taskId}/subtasks": {
            "get": {
                "tags": ["Tasks"],
                "summary": "Get the sub tasks on a task.",
                "description": "Sample request:\r\n            \r\n    GET /tasks/{taskId}/subtasks/",
                "operationId": "GetSubTasks",
                "parameters": [{
                        "name": "taskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the subtasks",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": ["Users"],
                "summary": "Create a user.\r\nUse RegisterToFirm \"true\" to register the new user to the associated accountId\r\nUse RegisterToFirm \"false\" to create a new user without registering it to an accountId (the resulting userId must be used when creating a new firm)",
                "description": "Sample request:\r\n            \r\n    POST /users\r\n    {\r\n        \"Email\": \"bob.jones123@gmail.com\",\r\n        \"Password\": \"xxxxxxxx\", \r\n        \"RegisterToFirm\": true\r\n    }",
                "operationId": "CreateUser",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The user has been accepted and will be created shortly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhooks/events": {
            "get": {
                "tags": ["Webhooks"],
                "summary": "Lists the available event types.",
                "description": "Sample request:\r\n            \r\n    GET /webhooks/events",
                "operationId": "GetEventTypes",
                "responses": {
                    "200": {
                        "description": "Returns the available event types.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/StringCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StringCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StringCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhooks": {
            "get": {
                "tags": ["Webhooks"],
                "summary": "List client's existing webhook subscriptions.",
                "description": "Sample request:\r\n            \r\n    GET /webhooks",
                "operationId": "GetSubscriptions",
                "parameters": [{
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "maximum": 2147483647,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the webhook subscriptions",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionPagedCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionPagedCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionPagedCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": ["Webhooks"],
                "summary": "Subscribe to a new webhook with the supplied subscription details.",
                "description": "Sample request:\r\n            \r\n    POST /webhooks",
                "operationId": "CreateSubscription",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the new webhook subscription",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhooks/{id}": {
            "get": {
                "tags": ["Webhooks"],
                "summary": "Retrieves details of a client's existing webhook subscription.",
                "description": "Sample request:\r\n            \r\n    GET /webhooks/{id}",
                "operationId": "GetSubscription",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the webhook subscriptions",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Webhooks"],
                "summary": "Update a webhook subscription",
                "description": "Sample request:\r\n            \r\n    PUT /webhooks",
                "operationId": "UpdateSubscription",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the updated webhook subscription",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Webhooks"],
                "summary": "Unsubscribse from the existing webhook subscription",
                "description": "Sample request:\r\n            \r\n    DELETE /webhooks",
                "operationId": "DeleteSubscription",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The webhook subscription has been deleted"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhooks/{id}/notify": {
            "post": {
                "tags": ["Webhooks"],
                "summary": "Trigger webhook notification for the specified subscription.\r\nUsed for testing purposes.",
                "description": "Sample request:\r\n            \r\n    POST /webhooks/{id}/Notify",
                "operationId": "Notify",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Webhook notification has been sent.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/StringCollection"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StringCollection"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StringCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountTypes": {
                "enum": [0, 1, 2],
                "type": "integer",
                "format": "int32"
            },
            "BankAccount": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the bank account.",
                        "nullable": true
                    },
                    "accountType": {
                        "$ref": "#/components/schemas/AccountTypes"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "Account Name.",
                        "nullable": true
                    },
                    "accountNumber": {
                        "type": "string",
                        "description": "Account Number.",
                        "nullable": true
                    },
                    "bankName": {
                        "type": "string",
                        "description": "Bank Name.",
                        "nullable": true
                    },
                    "branchNumber": {
                        "type": "string",
                        "description": "Branch Number.",
                        "nullable": true
                    },
                    "branchName": {
                        "type": "string",
                        "description": "Branch Name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BankAccountBalance": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "balance": {
                        "type": "number",
                        "format": "double"
                    },
                    "contactBalances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccountContactBalance"
                        },
                        "nullable": true
                    },
                    "matterBalances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccountMatterBalance"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BankAccountCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccount"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BankAccountContactBalance": {
                "type": "object",
                "properties": {
                    "contactId": {
                        "type": "string",
                        "nullable": true
                    },
                    "matterId": {
                        "type": "string",
                        "nullable": true
                    },
                    "balance": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "BankAccountMatterBalance": {
                "type": "object",
                "properties": {
                    "matterId": {
                        "type": "string",
                        "nullable": true
                    },
                    "balance": {
                        "type": "number",
                        "format": "double"
                    },
                    "unpresentedChequesBalance": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "Link": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            },
            "Activity": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the activity.",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The version id of the activity.",
                        "nullable": true
                    },
                    "updatedByUserId": {
                        "type": "string",
                        "description": "The id of the user that last updated the activity.",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/EntryType"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the activity.",
                        "nullable": true
                    },
                    "code": {
                        "type": "string",
                        "description": "Code of the activity.",
                        "nullable": true
                    },
                    "isBillable": {
                        "type": "boolean",
                        "description": "True if the activity is billable."
                    },
                    "rateType": {
                        "$ref": "#/components/schemas/ActivityRateType"
                    },
                    "rate": {
                        "type": "number",
                        "description": "Rate of the activity in dollars.\r\nIf set, rate type must be OverrideRateForAllStaff",
                        "format": "double"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Quantity for the activity.",
                        "format": "double"
                    },
                    "taxInclusive": {
                        "type": "boolean",
                        "description": "If true, the amount is GST inclusive, otherwise GST exclusive. Only applicable in AU.\r\nGST inclusive means: Amount exc. GST = Amount - GST, Amount inc. GST = Amount.\r\nGST exclusive means: Amount exc. GST = Amount, Amount inc. GST = Amount + GST."
                    },
                    "taxExempt": {
                        "type": "boolean",
                        "description": "Sets tax rate to 0 for the entry (e.g. expense)."
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "True if the activity is deleted."
                    }
                },
                "additionalProperties": false
            },
            "ActivityDto": {
                "type": "object",
                "properties": {
                    "updatedByUserId": {
                        "type": "string",
                        "description": "The id of the user making the change.",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/EntryType"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the activity.",
                        "nullable": true
                    },
                    "code": {
                        "type": "string",
                        "description": "Code of the activity.",
                        "nullable": true
                    },
                    "isBillable": {
                        "type": "boolean",
                        "description": "True if the activity is billable."
                    },
                    "rateType": {
                        "$ref": "#/components/schemas/ActivityRateType"
                    },
                    "rate": {
                        "type": "number",
                        "description": "Rate of the activity in dollars.\r\nIf set, rate type must be OverrideRateForAllStaff",
                        "format": "double",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Quantity for the activity.",
                        "format": "double",
                        "nullable": true
                    },
                    "taxInclusive": {
                        "type": "boolean",
                        "description": "If true, the amount is GST inclusive, otherwise GST exclusive. Only applicable in AU.\r\nGST inclusive means: Amount exc. GST = Amount - GST, Amount inc. GST = Amount.\r\nGST exclusive means: Amount exc. GST = Amount, Amount inc. GST = Amount + GST."
                    },
                    "taxExempt": {
                        "type": "boolean",
                        "description": "Sets tax rate to 0 for the entry (e.g. expense)."
                    }
                },
                "additionalProperties": false
            },
            "ActivityPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "ActivityRateType": {
                "enum": [0, 1, 2],
                "type": "integer",
                "format": "int32"
            },
            "EntryType": {
                "enum": [0, 1, 2],
                "type": "integer",
                "format": "int32"
            },
            "Address": {
                "type": "object",
                "properties": {
                    "buildingLevel": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitType": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetName": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetType": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine1": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "county": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "AddressDto": {
                "type": "object",
                "properties": {
                    "buildingLevel": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "unitType": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetName": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetType": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine1": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "county": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Company": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "fax": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "abn": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyNumberType": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "businessAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "staff": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "CompanyDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "For USA - one of Corporation, Government Agency, Limited Liability Company, Sole Proprietor, Partnership, Not-for-Profit\r\nFor AUS - one of Company, Sole Proprietor, Partnership, Government Department",
                        "nullable": true
                    },
                    "phone": {
                        "$ref": "#/components/schemas/PhoneNumberDto"
                    },
                    "fax": {
                        "$ref": "#/components/schemas/PhoneNumberDto"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessAddress": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "abn": {
                        "type": "string",
                        "description": "Only applicable for AUS",
                        "nullable": true
                    },
                    "companyNumberType": {
                        "type": "string",
                        "description": "Only applicable for AUS",
                        "nullable": true
                    },
                    "companyNumber": {
                        "type": "string",
                        "description": "Only applicable for AUS",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Contact": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "externalSystemId": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "person": {
                        "$ref": "#/components/schemas/Person"
                    },
                    "company": {
                        "$ref": "#/components/schemas/Company"
                    },
                    "groupOfPeople": {
                        "$ref": "#/components/schemas/GroupOfPeople"
                    },
                    "lastUpdated": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "ContactDto": {
                "type": "object",
                "properties": {
                    "externalSystemId": {
                        "type": "string",
                        "nullable": true
                    },
                    "person": {
                        "$ref": "#/components/schemas/PersonDto"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyDto"
                    },
                    "groupOfPeople": {
                        "$ref": "#/components/schemas/GroupOfPeopleDto"
                    }
                },
                "additionalProperties": false
            },
            "ContactPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "ContactRelationDto": {
                "type": "object",
                "properties": {
                    "relatedContactId": {
                        "type": "string",
                        "nullable": true
                    },
                    "businessRole": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "GroupOfPeople": {
                "type": "object",
                "properties": {
                    "people": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "residentialAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    }
                },
                "additionalProperties": false
            },
            "GroupOfPeopleDto": {
                "type": "object",
                "properties": {
                    "peopleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "residentialAddress": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/AddressDto"
                    }
                },
                "additionalProperties": false
            },
            "ISearchExpressionProvider": {
                "type": "object",
                "additionalProperties": false
            },
            "Person": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "middleName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "nameSuffix": {
                        "type": "string",
                        "nullable": true
                    },
                    "customName": {
                        "type": "string",
                        "description": "Custom name to use when writing a latter to this contact",
                        "nullable": true
                    },
                    "residentialAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "phone2": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "fax": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "cell": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "occupation": {
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "birthPlace": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthState": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "identificationNumberType": {
                        "type": "string",
                        "nullable": true
                    },
                    "identificationNumber": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PersonDto": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "middleName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "nameSuffix": {
                        "type": "string",
                        "nullable": true
                    },
                    "customName": {
                        "type": "string",
                        "description": "Custom name to use when writing a latter to this contact",
                        "nullable": true
                    },
                    "residentialAddress": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/PhoneNumberDto"
                    },
                    "fax": {
                        "$ref": "#/components/schemas/PhoneNumberDto"
                    },
                    "cell": {
                        "$ref": "#/components/schemas/PhoneNumberDto"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "occupation": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "birthPlace": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthState": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "identificationNumberType": {
                        "type": "string",
                        "nullable": true
                    },
                    "identificationNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "type": "string",
                        "description": "Male, Female",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PhoneNumber": {
                "type": "object",
                "properties": {
                    "areaCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PhoneNumberDto": {
                "type": "object",
                "properties": {
                    "areaCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PoBoxAddress": {
                "type": "object",
                "properties": {
                    "careOf": {
                        "type": "string",
                        "nullable": true
                    },
                    "poBoxType": {
                        "type": "string",
                        "nullable": true
                    },
                    "poBoxNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PoBoxAddressDto": {
                "type": "object",
                "properties": {
                    "careOf": {
                        "type": "string",
                        "nullable": true
                    },
                    "poBoxType": {
                        "type": "string",
                        "nullable": true
                    },
                    "poBoxNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SearchTerm": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "searchFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "operator": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "validSyntax": {
                        "type": "boolean"
                    },
                    "index": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expressionProvider": {
                        "$ref": "#/components/schemas/ISearchExpressionProvider"
                    }
                },
                "additionalProperties": false
            },
            "AddFileDto": {
                "required": ["fileName"],
                "type": "object",
                "properties": {
                    "fileName": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "Full name of the file including the file extension",
                        "example": "court filing.pdf"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "Id of the folder to add the file to. If null it will be placed in the root folder",
                        "nullable": true
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The original datetime that the file was created. If null the current datetime will be used",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DownloadFileInfo": {
                "type": "object",
                "properties": {
                    "fileId": {
                        "type": "string",
                        "nullable": true
                    },
                    "downloadUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sizeBytes": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "additionalProperties": false
            },
            "EditFileDto": {
                "required": ["fileName"],
                "type": "object",
                "properties": {
                    "fileName": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "Full name of the file including the file extension",
                        "example": "court filing.pdf"
                    },
                    "folderId": {
                        "type": "string",
                        "description": "Id of the folder to add the file to. If null it will be placed in the root folder",
                        "nullable": true
                    },
                    "fileAdditionalData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Collection of KeyValuePair(string, string) to update File meta data.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "File": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "folder": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileExtension": {
                        "type": "string",
                        "nullable": true
                    },
                    "ownerId": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "string",
                        "nullable": true
                    },
                    "from": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sizeBytes": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "downloadInfo": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "additionalData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FilePagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "Folder": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "parentId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FolderDto": {
                "required": ["name"],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 256,
                        "type": "string"
                    },
                    "parentFolderId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FolderListing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Folder"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "FolderListingPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FolderListing"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "UploadFileInfo": {
                "type": "object",
                "properties": {
                    "fileId": {
                        "type": "string",
                        "nullable": true
                    },
                    "uploadUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "AddAttachmentDto": {
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string",
                        "description": "The name of the attachment file. Mandatory field.\r\nAccepted file types are: jpeg, jpg, pdf, png.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "This object holds data for a request to upload an expense attachment."
            },
            "AddAttachmentInfo": {
                "type": "object",
                "properties": {
                    "expenseId": {
                        "type": "string",
                        "description": "The id of the expense that a file will be uploaded to.",
                        "nullable": true
                    },
                    "uploadUrl": {
                        "type": "string",
                        "description": "The URL for uploading the file.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Return value for a request to add an expense attachemnt."
            },
            "Expense": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The version id of the expense.",
                        "nullable": true
                    },
                    "createdByUserId": {
                        "type": "string",
                        "description": "The id of the user that created the expense.",
                        "nullable": true
                    },
                    "staffId": {
                        "type": "string",
                        "description": "The id of the staff member linked to the expense.",
                        "nullable": true
                    },
                    "matterId": {
                        "type": "string",
                        "description": "The id of the matter that the expense belongs to.",
                        "nullable": true
                    },
                    "invoiceId": {
                        "type": "string",
                        "description": "The invoice associated to the expense.",
                        "nullable": true
                    },
                    "origin": {
                        "type": "string",
                        "description": "Where the expense originated from.",
                        "nullable": true
                    },
                    "activityCode": {
                        "type": "string",
                        "description": "The activity code linked to the expense.",
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject - this is a short description of the expense.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional detailed description of the expense.",
                        "nullable": true
                    },
                    "expenseDate": {
                        "type": "string",
                        "description": "The date of the expense.",
                        "format": "date-time"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "The quantity of the expense in units (if not applicable, use 1). \r\nThe expense amount will be calculated as Quantity * Price.",
                        "format": "double"
                    },
                    "price": {
                        "type": "number",
                        "description": "The price of the expense in dollars.\r\nLimited to 2 decimal places (cents).\r\nThe expense amount will be calculated as Quantity * Price.",
                        "format": "double"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Total amount of the expense. Calculated as Price * Quantity.\r\nThis amount ignores GST (if applicable). See Billing.Expenses.API.Resources.Expense.AmountExcTax and Billing.Expenses.API.Resources.Expense.AmountIncTax.",
                        "format": "double"
                    },
                    "amountExcTax": {
                        "type": "number",
                        "description": "Amount excluding tax. Calculated from Amount and Tax depending on the TaxInclusive property.\r\nIf tax is not applicable (outside AU), this will be the same as Amount.",
                        "format": "double"
                    },
                    "amountIncTax": {
                        "type": "number",
                        "description": "Amount including tax. Calculated from Amount and Tax depending on the TaxInclusive property.\r\nIf tax is not applicable (outside AU), this will be the same as Amount.",
                        "format": "double"
                    },
                    "tax": {
                        "type": "number",
                        "description": "GST amount of the expense in dollars. Only applicable in AU.",
                        "format": "double"
                    },
                    "taxInclusive": {
                        "type": "boolean",
                        "description": "If true, the amount is GST inclusive, otherwise GST exclusive. Only applicable in AU.\r\nGST inclusive means: Amount exc. GST = Amount - GST, Amount inc. GST = Amount.\r\nGST exclusive means: Amount exc. GST = Amount, Amount inc. GST = Amount + GST.\r\n(Amount = Price * Quantity, GST = value of the Tax field)"
                    },
                    "finalized": {
                        "type": "boolean",
                        "description": "True if the expense has been finalized."
                    },
                    "isWrittenOff": {
                        "type": "boolean",
                        "description": "True if the expense is written off. True only allowed if IsBillable is true. \r\nWritten off expenses will show on an invoice with their amount, but will not be counted in the invoice total."
                    },
                    "isBillable": {
                        "type": "boolean",
                        "description": "True if the expense is billable. Non-billable expense will, by default, not be shown on invoices\r\n(and, if shown, the amount will be 0)."
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "True if the expense is deleted."
                    }
                },
                "additionalProperties": false,
                "description": "An expense."
            },
            "ExpenseDto": {
                "type": "object",
                "properties": {
                    "expenseDate": {
                        "type": "string",
                        "description": "The date of the expense. Mandatory field.",
                        "format": "date-time"
                    },
                    "updatedByUserId": {
                        "type": "string",
                        "description": "The id of the user making the change.",
                        "nullable": true
                    },
                    "staffId": {
                        "type": "string",
                        "description": "The id of the staff member linked to the expense. Mandatory field.",
                        "nullable": true
                    },
                    "invoiceId": {
                        "type": "string",
                        "description": "The invoice associated to the expense.",
                        "nullable": true
                    },
                    "activityCode": {
                        "type": "string",
                        "description": "The activity code linked to the expense.",
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject - this should be a short description of the expense. Mandatory field.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional detailed description of the expense.",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "description": "The quantity of the expense in units (if not applicable, use 1). Must be a non-negative number.\r\nLimited to 2 decimal places.\r\nThe expense amount will be calculated as Quantity * Price.",
                        "format": "double"
                    },
                    "price": {
                        "type": "number",
                        "description": "The price of the expense in dollars. Must be a non-negative number.\r\nLimited to 2 decimal places (cents).\r\nThe expense amount will be calculated as Quantity * Price.",
                        "format": "double"
                    },
                    "tax": {
                        "type": "number",
                        "description": "GST amount of the expense in dollars. Only applicable in AU.",
                        "format": "double",
                        "nullable": true
                    },
                    "taxInclusive": {
                        "type": "boolean",
                        "description": "If true, the amount is GST inclusive, otherwise GST exclusive. Only applicable in AU.\r\nGST inclusive means: Amount exc. GST = Amount - GST, Amount inc. GST = Amount.\r\nGST exclusive means: Amount exc. GST = Amount, Amount inc. GST = Amount + GST.\r\n(Amount = Price * Quantity, GST = value of the Tax field)"
                    },
                    "finalized": {
                        "type": "boolean",
                        "description": "True if the expense has been finalized."
                    },
                    "isWrittenOff": {
                        "type": "boolean",
                        "description": "True if the expense is written off. True only allowed if IsBillable is true. \r\nWritten off expenses will show on an invoice with their amount, but will not be counted in the invoice total."
                    },
                    "isBillable": {
                        "type": "boolean",
                        "description": "True if the expense is billable. Non-billable expense will, by default, not be shown on invoices\r\n(and, if shown, the amount will be 0)."
                    },
                    "isInvoicedExternally": {
                        "type": "boolean",
                        "description": "True if the expense is invoiced externally."
                    }
                },
                "additionalProperties": false,
                "description": "An expense."
            },
            "ExpensePagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Expense"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "Fee": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the fee.",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The version id of the fee.",
                        "nullable": true
                    },
                    "matterId": {
                        "type": "string",
                        "description": "The id of the matter that the fee belongs to.",
                        "nullable": true
                    },
                    "staffId": {
                        "type": "string",
                        "description": "The id of the staff member linked to the fee.",
                        "nullable": true
                    },
                    "createdByUserId": {
                        "type": "string",
                        "description": "The id of the user that created the fee.",
                        "nullable": true
                    },
                    "lastUpdatedByUserId": {
                        "type": "string",
                        "description": "The id of the user that last updated the fee.",
                        "nullable": true
                    },
                    "invoiceId": {
                        "type": "string",
                        "description": "The invoice associated to the fee.",
                        "nullable": true
                    },
                    "activityCode": {
                        "type": "string",
                        "description": "The activity code linked to the fee.",
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject associated to the fee.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional detailed description of the fee.",
                        "nullable": true
                    },
                    "feeDate": {
                        "type": "string",
                        "description": "The date of the fee.",
                        "format": "date-time"
                    },
                    "feeType": {
                        "$ref": "#/components/schemas/EntryType"
                    },
                    "finalized": {
                        "type": "boolean",
                        "description": "True if the fee has been finalized"
                    },
                    "isWrittenOff": {
                        "type": "boolean",
                        "description": "True if the fee is written off. True only allowed if IsBillable is true.\r\nWritten off fee will show on an invoice with their amount, but will not be counted in the invoice total."
                    },
                    "isBillable": {
                        "type": "boolean",
                        "description": "True if the fee is billable. Non-billable fee will, by default, not be shown on invoices\r\n(and, if shown, the amount will be 0).",
                        "nullable": true
                    },
                    "tax": {
                        "type": "number",
                        "description": "GST amount of the fee in dollars. Only applicable in AU.",
                        "format": "double"
                    },
                    "taxInclusive": {
                        "type": "boolean",
                        "description": "If true, the amount is GST inclusive, otherwise GST exclusive. Only applicable in AU.\r\nGST inclusive means: Amount exc. GST = Amount - GST, Amount inc. GST = Amount.\r\nGST exclusive means: Amount exc. GST = Amount, Amount inc. GST = Amount + GST."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the fee in minutes.\r\nThis duration is used if there are no sub activities.",
                        "format": "int64"
                    },
                    "rate": {
                        "type": "number",
                        "description": "The rate of the fee in dollars.",
                        "format": "double"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Total amount of the fee in dollars. Calculated using Rate and Duration depending on the fee type.\r\nThis amount includes tax depending on the TaxInclusive property. See Billing.Fees.API.Resources.Fee.AmountExcTax and Billing.Fees.API.Resources.Fee.AmountIncTax.",
                        "format": "double"
                    },
                    "amountExcTax": {
                        "type": "number",
                        "description": "Amount excluding tax in dollars. Calculated from Amount and Tax depending on the TaxInclusive property.\r\nIf tax is not applicable (outside AU), this will be the same as Amount.",
                        "format": "double"
                    },
                    "amountIncTax": {
                        "type": "number",
                        "description": "Amount including tax in dollars. Calculated from Amount and Tax depending on the TaxInclusive property.\r\nIf tax is not applicable (outside AU), this will be the same as Amount.",
                        "format": "double"
                    },
                    "billableAmountExcTax": {
                        "type": "number",
                        "description": "Billable amount excluding tax in dollars. If fee is billable, value will be the same as AmountExcTax. If it's non-billable,\r\nvalue will be 0.\r\nIf the fee is partially billable (i.e. has source items, some of which are billable\r\nand some not), this value will contain the amount calculated from billable items only.",
                        "format": "double"
                    },
                    "billableTax": {
                        "type": "number",
                        "description": "Billable tax in dollars. If fee is billable, value will be the same as Tax. If it's non-billable,\r\nvalue will be 0.\r\nIf the fee is partially billable (i.e. has source items, some of which are billable\r\nand some not), this value will contain the tax calculated from billable items only.\r\nIn all other cases, the value will be the same as Tax.",
                        "format": "double"
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "True if the fee is deleted."
                    },
                    "sourceItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FeeSourceItem"
                        },
                        "description": "The source items on the fee.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FeeDto": {
                "type": "object",
                "properties": {
                    "updatedByUserId": {
                        "type": "string",
                        "description": "The id of the user making the change.",
                        "nullable": true
                    },
                    "staffId": {
                        "type": "string",
                        "description": "The id of the staff member linked to the fee. Mandatory field.",
                        "nullable": true
                    },
                    "invoiceId": {
                        "type": "string",
                        "description": "The invoice associated to the fee.",
                        "nullable": true
                    },
                    "activityCode": {
                        "type": "string",
                        "description": "The activity code linked to the fee.",
                        "nullable": true
                    },
                    "feeType": {
                        "$ref": "#/components/schemas/EntryType"
                    },
                    "feeDate": {
                        "type": "string",
                        "description": "The date of the fee. Mandatory field.",
                        "format": "date-time"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject - this should be a short description of the fee. Mandatory field.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional detailed description of the fee.",
                        "nullable": true
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the fee in minutes.\r\nThis duration is used if there are no sub activities.",
                        "format": "int64"
                    },
                    "rate": {
                        "type": "number",
                        "description": "The rate of the fee in dollars.",
                        "format": "double"
                    },
                    "tax": {
                        "type": "number",
                        "description": "GST amount of the fee in dollars. Only applicable in AU.",
                        "format": "double",
                        "nullable": true
                    },
                    "taxInclusive": {
                        "type": "boolean",
                        "description": "If true, the amount is GST inclusive, otherwise GST exclusive. Only applicable in AU.\r\nGST inclusive means: Amount exc. GST = Amount - GST, Amount inc. GST = Amount.\r\nGST exclusive means: Amount exc. GST = Amount, Amount inc. GST = Amount + GST.\r\n(Amount = Price * Quantity, GST = value of the Tax field)"
                    },
                    "finalized": {
                        "type": "boolean",
                        "description": "True if the fee has been finalized."
                    },
                    "isWrittenOff": {
                        "type": "boolean",
                        "description": "True if the fee is written off. True only allowed if IsBillable is true. \r\nWritten off fee will show on an invoice with their amount, but will not be counted in the invoice total."
                    },
                    "isBillable": {
                        "type": "boolean",
                        "description": "True if the fee is billable. Non-billable fee will, by default, not be shown on invoices\r\n(and, if shown, the amount will be 0)."
                    },
                    "isInvoicedExternally": {
                        "type": "boolean",
                        "description": "True if the fee is invoiced externally."
                    },
                    "sourceItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FeeSourceItemDto"
                        },
                        "description": "The source items on the fee.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "A fee."
            },
            "FeePagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Fee"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "FeeSourceItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description.",
                        "nullable": true
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration in minutes.",
                        "format": "int64"
                    },
                    "isBillable": {
                        "type": "boolean",
                        "description": "True if the fee source item is billable."
                    }
                },
                "additionalProperties": false
            },
            "FeeSourceItemDto": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description.",
                        "nullable": true
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration in minutes.",
                        "format": "int64"
                    },
                    "isBillable": {
                        "type": "boolean",
                        "description": "True if the fee source item is billable."
                    }
                },
                "additionalProperties": false
            },
            "CreateFirmDto": {
                "type": "object",
                "properties": {
                    "firm": {
                        "$ref": "#/components/schemas/FirmDto"
                    },
                    "staff": {
                        "$ref": "#/components/schemas/StaffDto"
                    }
                },
                "additionalProperties": false
            },
            "Firm": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "fax": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    }
                },
                "additionalProperties": false
            },
            "FirmDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetAddress": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "phone": {
                        "$ref": "#/components/schemas/PhoneNumberDto"
                    },
                    "fax": {
                        "$ref": "#/components/schemas/PhoneNumberDto"
                    }
                },
                "additionalProperties": false
            },
            "Staff": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "middleName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "initials": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "cell": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "role": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "former": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "StaffDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "middleName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "initials": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "$ref": "#/components/schemas/PhoneNumberDto"
                    },
                    "cell": {
                        "$ref": "#/components/schemas/PhoneNumberDto"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "role": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "former": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "StaffPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Staff"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "Discount": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/DiscountType"
                    },
                    "fixedDiscount": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "DiscountType": {
                "enum": [0, 1],
                "type": "integer",
                "format": "int32"
            },
            "Invoice": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the invoice.",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The version id of the invoice.",
                        "nullable": true
                    },
                    "matterId": {
                        "type": "string",
                        "description": "The id of the matter that the invoice belongs to.",
                        "nullable": true
                    },
                    "lastUpdatedByUserId": {
                        "type": "string",
                        "description": "The id of the user that last updated the invoice.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The invocie description.",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/InvoiceStatus"
                    },
                    "invoiceNumber": {
                        "type": "integer",
                        "description": "The invoice number.",
                        "format": "int64",
                        "nullable": true
                    },
                    "invoiceTitle": {
                        "type": "string",
                        "description": "The invoice title.",
                        "nullable": true
                    },
                    "invoiceTitleLine2": {
                        "type": "string",
                        "description": "The invoice title.",
                        "nullable": true
                    },
                    "issuedDate": {
                        "type": "string",
                        "description": "The date the invoice has been issued.",
                        "format": "date-time"
                    },
                    "dueDate": {
                        "type": "string",
                        "description": "The date the invoice is due.",
                        "format": "date-time"
                    },
                    "paidDate": {
                        "type": "string",
                        "description": "The date the invoice was paid.",
                        "format": "date-time"
                    },
                    "discount": {
                        "$ref": "#/components/schemas/Discount"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoicedMatterEntryItem"
                        },
                        "description": "The entries on the invoice.",
                        "nullable": true
                    },
                    "waived": {
                        "type": "boolean",
                        "description": "True if the invoice is waived."
                    },
                    "invoiceTotals": {
                        "$ref": "#/components/schemas/InvoiceTotals"
                    }
                },
                "additionalProperties": false
            },
            "InvoicedMatterEntryItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/EntryType"
                    }
                },
                "additionalProperties": false
            },
            "InvoicePagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invoice"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "InvoiceStatus": {
                "enum": [0, 1, 2, 3, 4],
                "type": "integer",
                "format": "int32"
            },
            "InvoiceTotals": {
                "type": "object",
                "properties": {
                    "paid": {
                        "type": "number",
                        "format": "double"
                    },
                    "billed": {
                        "type": "number",
                        "format": "double"
                    },
                    "unpaid": {
                        "type": "number",
                        "format": "double"
                    },
                    "writtenOff": {
                        "type": "number",
                        "format": "double"
                    },
                    "waived": {
                        "type": "number",
                        "format": "double"
                    },
                    "discount": {
                        "type": "number",
                        "format": "double"
                    },
                    "total": {
                        "type": "number",
                        "format": "double"
                    },
                    "tax": {
                        "type": "number",
                        "format": "double"
                    },
                    "interest": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "unpaidExcInterest": {
                        "type": "number",
                        "format": "double"
                    },
                    "feeTotal": {
                        "type": "number",
                        "description": "All fees (written off + non written off)",
                        "format": "double"
                    },
                    "writtenOffFeeTotal": {
                        "type": "number",
                        "description": "Written off fees",
                        "format": "double"
                    },
                    "expenseTotal": {
                        "type": "number",
                        "description": "All expenses (written off + non written off)",
                        "format": "double"
                    },
                    "writtenOffExpenseTotal": {
                        "type": "number",
                        "description": "Written off expenses",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "MatterItem": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "index": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "visible": {
                        "type": "boolean"
                    },
                    "subItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatterItem"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "MatterItems": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatterItem"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LayoutContact": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "LayoutContactData": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "LayoutDesign": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LayoutDesignField"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LayoutDesignField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/LayoutDesignFieldType"
                    },
                    "possibleValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LayoutDesignFieldType": {
                "enum": [0, 1, 2, 3, 4],
                "type": "integer",
                "format": "int32"
            },
            "LayoutDesignInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LayoutDesignInfoPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LayoutDesignInfo"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "LayoutEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "appointmentId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LayoutMatterItem": {
                "type": "object",
                "properties": {
                    "index": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "layoutDesignId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "isRemoved": {
                        "type": "boolean"
                    },
                    "itemId": {
                        "type": "string",
                        "nullable": true
                    },
                    "parentId": {
                        "type": "string",
                        "nullable": true
                    },
                    "parentIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LayoutValue"
                        },
                        "nullable": true
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LayoutEvent"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "deprecatedId": {
                        "type": "string",
                        "description": "Id without ItemId, used for backward compatibility",
                        "nullable": true,
                        "readOnly": true
                    },
                    "hasValues": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "LayoutMatterItemData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "itemId": {
                        "type": "string",
                        "nullable": true
                    },
                    "parentId": {
                        "type": "string",
                        "nullable": true
                    },
                    "index": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "layoutDesign": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LayoutValue"
                        },
                        "nullable": true
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LayoutEvent"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LayoutMatterItemDataCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LayoutMatterItemData"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "LayoutValue": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "description": "Gets or sets the object that contains supplemental data about the key/value pair.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ApiError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Matter": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "externalSystemId": {
                        "type": "string",
                        "description": "Id of this matter in an external system",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Matter number",
                        "nullable": true
                    },
                    "matterType": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "clients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "otherSides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "personResponsible": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "personAssisting": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "openedDate": {
                        "type": "string",
                        "description": "Returns the date the matter was opened.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "closedDate": {
                        "type": "string",
                        "description": "Returns the date the matter was closed.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "items": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "isMatterTemplate": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "MatterDto": {
                "type": "object",
                "properties": {
                    "externalSystemId": {
                        "type": "string",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "nullable": true
                    },
                    "matterTypeId": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "clientRole": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateOpened": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "personResponsibleStaffId": {
                        "type": "string",
                        "nullable": true
                    },
                    "personAssistingStaffId": {
                        "type": "string",
                        "nullable": true
                    },
                    "isLead": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "MatterPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Matter"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "MatterRelationships": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "relationships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Relationship"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "MatterRoles": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Relationship": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "representatives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "RelationshipDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactId": {
                        "type": "string",
                        "nullable": true
                    },
                    "representativeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Role": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "representatives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "relationships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Relationship"
                        },
                        "nullable": true
                    },
                    "isClient": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "RoleDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactId": {
                        "type": "string",
                        "nullable": true
                    },
                    "representativeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "isMatterItemRequired": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "MatterListItem": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "description": "Specifies provider-specific ID.",
                        "nullable": true
                    },
                    "providerId": {
                        "type": "string",
                        "description": "Specifies the provider name for this item.",
                        "nullable": true
                    },
                    "itemId": {
                        "type": "string",
                        "description": "Uniquely identifies this item.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "subItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatterListItem"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "MatterType": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "representativeOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "location": {
                        "type": "string",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatterListItem"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "MatterTypeInfo": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "versionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "representativeOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "location": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "MatterTypeInfoPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatterTypeInfo"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "Memo": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "matterId": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "text": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdByUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "MemoDto": {
                "required": ["text", "title"],
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string",
                        "description": "Supports plain-text and RTF"
                    },
                    "createdDateUtc": {
                        "type": "string",
                        "description": "Will default to the current datetime",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "MemoPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Memo"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "Task": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "createdByStaffId": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastUpdatedByStaffId": {
                        "type": "string",
                        "nullable": true
                    },
                    "completedByStaffId": {
                        "type": "string",
                        "nullable": true
                    },
                    "matterId": {
                        "type": "string",
                        "nullable": true
                    },
                    "parentTask": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "subject": {
                        "type": "string",
                        "nullable": true
                    },
                    "note": {
                        "type": "string",
                        "nullable": true
                    },
                    "isCompleted": {
                        "type": "boolean"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "assigneeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "subTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        },
                        "nullable": true
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Returned to client"
            },
            "TaskDto": {
                "type": "object",
                "properties": {
                    "createdByStaffId": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastUpdatedByStaffId": {
                        "type": "string",
                        "nullable": true
                    },
                    "completedByStaffId": {
                        "type": "string",
                        "nullable": true
                    },
                    "matterId": {
                        "type": "string",
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "nullable": true
                    },
                    "note": {
                        "type": "string",
                        "nullable": true
                    },
                    "isCompleted": {
                        "type": "boolean"
                    },
                    "assigneeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Used for creating/updating tasks"
            },
            "TaskPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            },
            "UserDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "nullable": true
                    },
                    "registerToFirm": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "StringCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Subscription": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "accountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "verificationToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "eventNotificationUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdDateUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedDateUtc": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionDto": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "eventNotificationUrl": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "SubscriptionPagedCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "href": {
                        "type": "string",
                        "nullable": true
                    },
                    "relation": {
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "type": "string",
                        "default": "GET",
                        "nullable": true
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Subscription"
                        },
                        "nullable": true
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": false
            }
        },
        "securitySchemes": {
            "api-key": {
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            },
            "token": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authtype": "cognito_user_pools"
            }
        }
    },
    "servers": [{
            "url": "https://stagingapi.smokeball.com",
            "description": "Staging API"
        }
    ],
    "security": [{
            "api-key": [],
            "token": []
        }
    ]
}
